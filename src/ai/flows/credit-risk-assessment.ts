// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A credit risk assessment AI agent.
 *
 * - assessCreditRisk - A function that handles the credit risk assessment process.
 * - AssessCreditRiskInput - The input type for the assessCreditRisk function.
 * - AssessCreditRiskOutput - The return type for the assessCreditRisk function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AssessCreditRiskInputSchema = z.object({
  codTipoId: z.string().describe('Código del tipo de ID (e.g., C, R)'),
  codIdSujeto: z.string().describe('Código de identificación del sujeto'),
  nomSujeto: z.string().describe('Nombre del cliente'),
  direccion: z.string().describe('Dirección del cliente'),
  ciudad: z.string().describe('Ciudad del cliente').optional(),
  telefono: z.string().describe('Número de teléfono del cliente').optional(),
  numOperacion: z.string().describe('Número de operación'),
  fecConcesion: z.string().describe('Fecha de concesión de la operación').optional(),
  valOperacion: z.number().describe('Valor de la operación').optional(),
  valorPago: z.number().describe('Valor del pago').optional(),
  fecVencimiento: z.string().describe('Fecha de vencimiento').optional(),
  valorVencido: z.number().describe('Valor vencido').optional(),
  usuario: z.string().describe('Usuario (de la API)'),
});
export type AssessCreditRiskInput = z.infer<typeof AssessCreditRiskInputSchema>;

const AssessCreditRiskOutputSchema = z.object({
  creditRiskAssessment: z
    .string()
    .describe('La evaluación del riesgo crediticio para el cliente.'),
  riskLevel: z.enum(['low', 'medium', 'high']).describe('El nivel de riesgo.'),
});
export type AssessCreditRiskOutput = z.infer<typeof AssessCreditRiskOutputSchema>;

export async function assessCreditRisk(input: AssessCreditRiskInput): Promise<AssessCreditRiskOutput> {
  return assessCreditRiskFlow(input);
}

const prompt = ai.definePrompt({
  name: 'assessCreditRiskPrompt',
  input: {schema: AssessCreditRiskInputSchema},
  output: {schema: AssessCreditRiskOutputSchema},
  prompt: `Eres un analista experto en riesgo crediticio.
  Evalúa el riesgo crediticio de un cliente basándose en la siguiente información. Si algunos campos no se proporcionan, tenlo en cuenta en tu análisis, pero aun así proporciona una evaluación.

  Nombre del Cliente: {{{nomSujeto}}}
  Dirección: {{{direccion}}}{{#if ciudad}}, {{{ciudad}}}{{/if}}
  Teléfono: {{#if telefono}}{{{telefono}}}{{else}}N/A{{/if}}
  Número de Operación: {{{numOperacion}}}
  Fecha de Concesión: {{#if fecConcesion}}{{{fecConcesion}}}{{else}}N/A{{/if}}
  Valor de la Operación: {{#if valOperacion}}{{{valOperacion}}}{{else}}N/A{{/if}}
  Valor del Pago: {{#if valorPago}}{{{valorPago}}}{{else}}N/A{{/if}}
  Fecha de Vencimiento: {{#if fecVencimiento}}{{{fecVencimiento}}}{{else}}N/A{{/if}}
  Valor Vencido: {{#if valorVencido}}{{{valorVencido}}}{{else}}N/A{{/if}}
  Usuario: {{{usuario}}}
  Código de Tipo de ID: {{{codTipoId}}}
  Código de ID del Sujeto: {{{codIdSujeto}}}

  Proporciona una evaluación detallada del riesgo crediticio y determina el nivel de riesgo (low, medium, or high).
  Devuelve el campo riskLevel como uno de "low", "medium", o "high".
  `,
});

const assessCreditRiskFlow = ai.defineFlow(
  {
    name: 'assessCreditRiskFlow',
    inputSchema: AssessCreditRiskInputSchema,
    outputSchema: AssessCreditRiskOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);