// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A credit risk assessment AI agent.
 *
 * - assessCreditRisk - A function that handles the credit risk assessment process.
 * - AssessCreditRiskInput - The input type for the assessCreditRisk function.
 * - AssessCreditRiskOutput - The return type for the assessCreditRisk function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AssessCreditRiskInputSchema = z.object({
  codTipoId: z.string().describe('Code of the ID type (e.g., C, R)'),
  codIdSujeto: z.string().describe('Code of the subject ID'),
  nomSujeto: z.string().describe('Name of the client'),
  direccion: z.string().describe('Address of the client'),
  ciudad: z.string().describe('City of the client'),
  telefono: z.string().describe('Phone number of the client'),
  numOperacion: z.string().describe('Operation number'),
  fecConcesion: z.string().describe('Granting date of the operation'),
  valOperacion: z.number().describe('Value of the operation'),
  valorPago: z.number().describe('Payment value'),
  fecVencimiento: z.string().describe('Due date'),
  valorVencido: z.number().describe('Overdue value'),
  placaVehiculo: z.string().describe('Vehicle plate number'),
  tipoPlan: z
    .enum([
      'estandar sc',
      'avanzado sc',
      'total sc',
      'estandar cc',
      'avanzado cc',
      'total cc',
    ])
    .describe('Type of plan'),
  usuario: z.string().describe('User (from API)'),
});
export type AssessCreditRiskInput = z.infer<typeof AssessCreditRiskInputSchema>;

const AssessCreditRiskOutputSchema = z.object({
  creditRiskAssessment: z
    .string()
    .describe('The assessment of credit risk for the client.'),
  riskLevel: z.enum(['low', 'medium', 'high']).describe('The risk level.'),
});
export type AssessCreditRiskOutput = z.infer<typeof AssessCreditRiskOutputSchema>;

export async function assessCreditRisk(input: AssessCreditRiskInput): Promise<AssessCreditRiskOutput> {
  return assessCreditRiskFlow(input);
}

const prompt = ai.definePrompt({
  name: 'assessCreditRiskPrompt',
  input: {schema: AssessCreditRiskInputSchema},
  output: {schema: AssessCreditRiskOutputSchema},
  prompt: `You are an expert credit risk analyst.
  Assess the credit risk of a client based on the following information:

  Client Name: {{{nomSujeto}}}
  Address: {{{direccion}}}, {{{ciudad}}}
  Phone: {{{telefono}}}
  Operation Number: {{{numOperacion}}}
  Granting Date: {{{fecConcesion}}}
  Operation Value: {{{valOperacion}}}
  Payment Value: {{{valorPago}}}
  Due Date: {{{fecVencimiento}}}
  Overdue Value: {{{valorVencido}}}
  Vehicle Plate: {{{placaVehiculo}}}
  Plan Type: {{{tipoPlan}}}
  User: {{{usuario}}}
  ID Type Code: {{{codTipoId}}}
  Subject ID Code: {{{codIdSujeto}}}

  Provide a detailed credit risk assessment and determine the risk level (low, medium, or high).
  Return the riskLevel field as one of "low", "medium", or "high".
  `,
});

const assessCreditRiskFlow = ai.defineFlow(
  {
    name: 'assessCreditRiskFlow',
    inputSchema: AssessCreditRiskInputSchema,
    outputSchema: AssessCreditRiskOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
